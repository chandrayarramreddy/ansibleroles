
- hosts: localhost
  become: true
  gather_facts: false
  vars:
    region: us-east-1
    instance_type: t2.micro
    ami: ami-0b0af3577fe5e3532
    hosts_file: /etc/ansible/hosts
    access_key: AKIAQF4PJOTE44LGPI7L
    secret_key: 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
    c: 1
  tasks:
    - name: Create security group
      ec2_group:
        aws_access_key: '{{ access_key }}'
        aws_secret_key: '{{ secret_key }}'
        name: casecure
        description: Chandra Security Group
        region: '{{ region }}'
        rules:
          - proto: tcp
            from_port: 22
            to_port: 22
            cidr_ip: 0.0.0.0/0
    - name: Create an EC2 key
      ec2_key:
        aws_access_key: '{{ access_key }}'
        aws_secret_key: '{{ secret_key }}'
        name: casecure
        region: '{{ region }}'
      register: ec2_key
    - name: Save private key (PEM file)
      copy: >-
        content="{{ec2_key.key.private_key}}" dest=/home/ansible/casecure.pem
        mode=0600
      when: ec2_key.changed
    - name: Create an ec2 instance
      ec2:
        aws_access_key: '{{ access_key }}'
        aws_secret_key: '{{ secret_key }}'
        key_name: casecure
        group: casecure
        instance_type: '{{ instance_type}}'
        image: '{{ ami }}'
        wait: true
        region: '{{ region }}'
        count: 1
        count_tag:
          Name: Demo
        instance_tags:
          Name: Demo
      register: ec2
    - name: Save IP to inventory file
      lineinfile:
        dest: '{{hosts_file}}'
        insertafter: '\[webservers\]'
        line: '{{item.public_ip}}'
      with_items: '{{ec2.instances}}'
    - name: Print IP Address using debug in msg
      debug:
        msg: '{{item.public_ip}}'
      with_items: '{{ec2.instances}}'
    - name: Print IP Address using debug in var
      debug:
        var: '{{item.public_ip}}'
      with_items: '{{ec2.instances}}'
    - name: Print IP Address using debug using Verbose only
      debug:
        msg: '{{item.public_ip}} {{count}}'
     #   verbosity: 2
      with_items: '{{ec2.instances}}'
      vars: 
        count: "{{item.public_ip | length }}"
    - name: ec2 info using ec2_instance_info module
      ec2_instance_info:
        aws_access_key: '{{ access_key }}'
        aws_secret_key: '{{ secret_key }}'
        filters:
          instance-state-name:
            - running
        region: '{{ region }}'
      register: ec2_infon
    - name: new community data
      debug:
        msg: '{{ec2_infon.instances[0].public_ip_address}}'
    - name: new community dataa
      debug:
        msg: '{{item.public_ip_address}} - {{count2}} - {{count2}}'
        #msg: '{{ec2_infon.instances[count2].public_ip_address}}'
      with_items: '{{ec2_infon.instances}}'
     # with_items: '{{ec2_infon.instances}}'
      vars:
       # count1: "{{item.public_ip_address | length }}"
        count2: "{{index+1}}"
      loop_control:
        index_var: index
    - name: Count value
      set_fact: 
         vara: '{{item.public_ip_address}} - {{count2}} - {{count2}}'
         vre: '{{count2}}'
      with_items: '{{ec2_infon.instances}}'
      vars:
       # count2: "{{index+1}}"
        count2: "{{index}}"
      loop_control:
        index_var: index
    - debug:
        msg: '{{vara}}'
    - debug:
        msg: '{{vre}}'
   # - name: main ec2
   #   debug:
   #     msg: '{{ec2_infon}}'
    - name: Use of variable
      debug:
        msg: "{{ item }}"
      with_sequence: start=0 end='{{vre}}'


    - name: Use of variable in IP address
      debug:
       # var: ec2_infon.instances[item].public_ip_address
    #    msg: '{{ec2_infon.instances[item|int].public_ip_address}}'
        msg: 'S.No {{item|int +1}} IP address is {{(ec2_infon.instances[item|int].public_ip_address)}}'
      with_sequence: start=0 end='{{vre}}'
