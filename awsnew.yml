- hosts: localhost
  become: true
  gather_facts: false
#  no_log: true
  vars:
    region: us-east-1
    instance_type: t2.micro
    ami: ami-0b0af3577fe5e3532
    hosts_file: /etc/ansible/hosts
    access_key: AKIA6PM77XAMJFJVB5XP
    secret_key: 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
  tasks:
    - name: Create security group
      ec2_group:
        aws_access_key: '{{ access_key }}'
        aws_secret_key: '{{ secret_key }}'
        name: casecure
        description: Chandra Security Group
        region: '{{ region }}'
        rules:
          - proto: tcp
            from_port: 22
            to_port: 22
            cidr_ip: 0.0.0.0/0
    - name: Create an EC2 key
      ec2_key:
        aws_access_key: '{{ access_key }}'
        aws_secret_key: '{{ secret_key }}'
        name: casecure
        region: '{{ region }}'
      register: ec2_key
    - name: Save private key (PEM file)
      copy: >-
        content="{{ec2_key.key.private_key}}" dest=/home/ansible/casecure.pem
        mode=0600
      when: ec2_key.changed
    - name: Create an ec2 instance
      ec2:
        aws_access_key: '{{ access_key }}'
        aws_secret_key: '{{ secret_key }}'
        key_name: casecure
        group: casecure
        instance_type: '{{ instance_type}}'
        image: '{{ ami }}'
        wait: true
        region: '{{ region }}'
        count: 1
        count_tag:
          Name: Demo
        instance_tags:
          Name: Demo
      register: ec2
    - name: Save IP to inventory file
      lineinfile:
        dest: '{{hosts_file}}'
        insertafter: '\[webservers\]'
      #  line: '{{item.private_ip}}'
        line: '{{item.public_ip}}'
      with_items: '{{ec2.instances}}'
  # when msg is used huge data will be shown along with required data
    - debug:
        msg: '{{item.public_ip}}'
      with_items: '{{ec2.instances}}'
  # when used var console will show the result required in some short data
    - debug:
        var: '{{item.public_ip}}'
      with_items: '{{ec2.instances}}'  
    # Below Code is used to show the results only when use -vvv or so
    - debug:
        var: '{{item.public_ip}}'
        verbosity: 2
      with_items: '{{ec2.instances}}'
    
    - name: ec2 info
      ec2_instance_info:
        aws_access_key: '{{ access_key }}'
        aws_secret_key: '{{ secret_key }}'
        filters:
         instance-state-name: [ "running" ]
        region: '{{ region }}'
      register: ec2_infon
   # - name: new community data
    #  debug:
    #    msg: "{{ec2_infon.instances[0].public_ip_address}}"
    - name: main ec2 b4
      debug:
        msg: "{{ec2_infon}}"
    - name: new community dataa
      debug:
        msg: '{{item.public_ip_address}}'
      with_items: '{{ec2_infon.instances}}'

    - name: main ec2
      debug:
        msg: "{{ec2_infon}}"
